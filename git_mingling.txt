1，git是分为三部分，一部分是你自己的文件git add ===>，另外一个是缓存区 git commit，最后一个是本地库
git add . ：他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。

git add -u ：他仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u 不会提交新文件（untracked file）。（git add --update的缩写）

git add -A ：是上面两个功能的合集（git add --all的缩写）

2.git放弃修改，强制覆盖本地代码
$ git fetch --all
$ git reset --hard origin/master   （sure  no）
$ git pull


3,某种程度上相当于git add和git commit -m的组合技，前提是被改动文件已经是tracked)
git commit -am "some str"  (直接提交+push  完成)
git push


'A'  新增

'D'  删除 
'M'  修改 
'R'  替代 
'C'  冲突 
'I'  忽略 
'?'  未受控 
'!'  丢失，一般是将受控文件直接删除导致  

这些标记是因为使用了Xcode自带的Git托管功能： 

1、代码中 某文件后面有 “M” 标记，表示该文件已被修改
2、代码中 某文件后面有 “A” 标记，表示该文件是新添加的，已受Git管理. 
3、代码中 某文件后面有 “?” 标记，表示该文件是新添加的，并且脱离了Git的管理，首先需要add，然后 提交托管. 
      （右键该文件 -> source control -> Add，这样该文件的标记就变为 “A”，然后提交托管） 
4、代码中 某文件后面有 “D” 标记，表示该文件在服务器上已被删除，这时update的话，可删除本地的文件。
5、代码中 某文件后面有 “C” 标记，表示该文件与服务器的文件冲突。




